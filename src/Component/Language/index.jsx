import React, { useEffect, useState } from 'react'
import { Popover } from '@mui/material'
import { Text } from '../../common/text'
import styled from 'styled-components'
import { useTranslation } from 'react-i18next'

export const LanguageSelect = () => {
  const [anchorEl, setAnchorEl] = useState()
  const handleOpen = e => setAnchorEl(e.currentTarget)
  const handleClose = () => setAnchorEl(null)
  const open = Boolean(anchorEl)
  const id = open ? 'simple-popover' : undefined

  const { t, i18n } = useTranslation()
  const setCloseAnchor = () => {
    setAnchorEl(null)
  }
  const langGlobal = localStorage.getItem('i18n') || 'vi'
  const onChangeLanguage = (lang) => {
    i18n.changeLanguage(lang)
    localStorage.setItem('i18n', lang)
    setCloseAnchor()
  }
  return (
    <LanguageStyled>
      <div className={'header-language'}>
        <div className={'header-language__title'} onClick={handleOpen}>
          <svg className={'header-language__title-icontrans'} width="20" height="20" viewBox="0 0 20 20" fill="none"
               xmlns="http://www.w3.org/2000/svg">
            <path
              d="M9.99998 19.5005C8.67691 19.5005 7.43749 19.2508 6.28173 18.7514C5.12596 18.2521 4.11891 17.5748 3.26058 16.7197C2.40224 15.8646 1.72757 14.8566 1.23655 13.6957C0.745517 12.5348 0.5 11.2896 0.5 9.96012C0.5 8.63704 0.745517 7.40018 1.23655 6.24954C1.72757 5.09891 2.40224 4.09603 3.26058 3.24089C4.11891 2.38578 5.12596 1.71527 6.28173 1.22937C7.43749 0.743469 8.67691 0.500519 9.99998 0.500519C11.323 0.500519 12.5625 0.743469 13.7182 1.22937C14.874 1.71527 15.881 2.38578 16.7394 3.24089C17.5977 4.09603 18.2724 5.09891 18.7634 6.24954C19.2544 7.40018 19.5 8.63704 19.5 9.96012C19.5 11.2896 19.2544 12.5348 18.7634 13.6957C18.2724 14.8566 17.5977 15.8646 16.7394 16.7197C15.881 17.5748 14.874 18.2521 13.7182 18.7514C12.5625 19.2508 11.323 19.5005 9.99998 19.5005ZM9.99998 18.4159C10.6218 17.7454 11.1333 17.0178 11.5346 16.2332C11.9359 15.4486 12.2647 14.5293 12.5211 13.4755H7.4942C7.74677 14.5139 8.07369 15.4316 8.47498 16.2284C8.87626 17.0252 9.38459 17.7543 9.99998 18.4159ZM8.41348 18.212C7.94553 17.6043 7.5311 16.897 7.1702 16.0899C6.8093 15.2829 6.52564 14.4114 6.31923 13.4755H2.33845C2.97818 14.7678 3.78203 15.7883 4.75 16.537C5.71795 17.2858 6.93911 17.8441 8.41348 18.212ZM11.6115 18.1966C12.9205 17.9031 14.1038 17.3473 15.1615 16.5293C16.2192 15.7114 17.0525 14.6934 17.6615 13.4755H13.6961C13.4474 14.4139 13.1467 15.2835 12.7942 16.0841C12.4416 16.8848 12.0474 17.589 11.6115 18.1966ZM1.97308 12.3409H6.11155C6.04872 11.8845 6.00833 11.4643 5.99038 11.0803C5.97243 10.6963 5.96345 10.3229 5.96345 9.96012C5.96345 9.55627 5.97499 9.17421 5.99808 8.81394C6.02116 8.45369 6.06411 8.06395 6.12693 7.64472H1.97308C1.84999 8.0319 1.76281 8.40626 1.71153 8.76779C1.66024 9.12934 1.6346 9.52679 1.6346 9.96012C1.6346 10.3999 1.66024 10.8082 1.71153 11.1851C1.76281 11.562 1.84999 11.9473 1.97308 12.3409ZM7.2769 12.3409H12.7385C12.8115 11.837 12.8596 11.4082 12.8827 11.0543C12.9058 10.7005 12.9173 10.3358 12.9173 9.96012C12.9173 9.60114 12.9058 9.25145 12.8827 8.91107C12.8596 8.57069 12.8115 8.14857 12.7385 7.64472H7.2769C7.20382 8.14857 7.15573 8.57069 7.13265 8.91107C7.10958 9.25145 7.09805 9.60114 7.09805 9.96012C7.09805 10.3358 7.10958 10.7005 7.13265 11.0543C7.15573 11.4082 7.20382 11.837 7.2769 12.3409ZM13.873 12.3409H18.0269C18.15 11.9473 18.2371 11.562 18.2884 11.1851C18.3397 10.8082 18.3654 10.3999 18.3654 9.96012C18.3654 9.52679 18.3397 9.12934 18.2884 8.76779C18.2371 8.40626 18.15 8.0319 18.0269 7.64472H13.898C13.9544 8.196 13.9942 8.64504 14.0173 8.99184C14.0403 9.33863 14.0519 9.66139 14.0519 9.96012C14.0519 10.3332 14.0378 10.6999 14.0096 11.0601C13.9814 11.4204 13.9358 11.8473 13.873 12.3409ZM13.6807 6.51012H17.6615C17.0731 5.23192 16.258 4.18864 15.2163 3.38029C14.1746 2.57196 12.9647 2.03831 11.5865 1.77934C12.0544 2.40883 12.4631 3.11556 12.8125 3.89954C13.1618 4.68353 13.4512 5.55372 13.6807 6.51012ZM7.4942 6.51012H12.5461C12.3243 5.5691 11.9952 4.68129 11.5586 3.84667C11.1221 3.01205 10.6025 2.26846 9.99998 1.61589C9.43459 2.13641 8.95735 2.77936 8.56825 3.54474C8.17913 4.31013 7.82112 5.29859 7.4942 6.51012ZM2.33845 6.51012H6.3346C6.54358 5.58449 6.81859 4.73384 7.15963 3.95819C7.50066 3.18254 7.91028 2.46139 8.38848 1.79472C7.01026 2.0601 5.80961 2.59024 4.78653 3.38512C3.76344 4.17999 2.94742 5.22165 2.33845 6.51012Z"
              fill="#56697C"/>
          </svg>
          <Text fontSize={14} color={'#161D25'}>{langGlobal == 'vi' ? 'Tiếng việt' : 'English'}</Text>
          <svg
            width="12"
            height="7"
            viewBox="0 0 12 7"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.00003 6.59416L11.0084 1.58583L9.83086 0.406662L6.00003 4.24L2.17003 0.406662L0.991699 1.585L6.00003 6.59416Z"
              fill="#B9BBD3"
            />
          </svg>
        </div>
        <Popover
          id={id}
          open={open}
          anchorEl={anchorEl}
          onClose={handleClose}
          anchorOrigin={{
            vertical: 'bottom',
            horizontal: 'right',
          }}
          transformOrigin={{
            vertical: 'top',
            horizontal: 'right',
          }}
          sx={{ top: 18 }}
        >
          <div className={'abc'} style={{ padding: 16 }}>
            <div onClick={() => onChangeLanguage('vi')}>Tiếng Việt</div>
            <div onClick={() => onChangeLanguage('en')}>English</div>
          </div>
        </Popover>

      </div>
    </LanguageStyled>

  )
}

const LanguageStyled = styled.div`
  .header-language{
    &__title{
      cursor: pointer;
      display: flex;
      align-items: center;
      padding-right: 24px;
      border-right: 1px solid rgba(86, 105, 124, 0.2);
      margin-left: 14px;
      &-icontrans{
        margin-right: 6px;
      }
      span{
        margin-right: 8px;
      }
    }
  }

`